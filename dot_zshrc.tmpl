## Start with path so everything else below works
export PATH=~/bin:~/.local/bin:/usr/local/opt/vim/bin:/usr/local/opt/ruby/bin:/usr/local/opt/git/bin/:/usr/local/opt/gnu-tar/libexec/gnubin:$PATH

export BREWPATH=/opt/homebrew
export PATH=$PATH:$BREWPATH/bin
export XDG_CACHE_HOME=~/.cache
~/bin/run_once_daily.sh
{{ if eq .location "client" -}}
export PATH=$HOME/.jenv/bin:$PATH
eval "$(jenv init -)"
{{ end -}}
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi

# Path to your oh-my-zsh installation.
# export ZSH=~/.oh-my-zsh

# ZSH_THEME="powerlevel10k/powerlevel10k"
# plugins=(
#   git
#   docker
#   #docker-compose
#   #aws
#   #brew
#   #npm
#   #yarn
#   zsh-autosuggestions
#   zsh-syntax-highlighting
# )

# source $ZSH/oh-my-zsh.sh
. "$HOME/.cargo/env"
# User configuration
## Exports
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
{{ if eq .chezmoi.os "darwin" }}
export PATH=$PATH:/Applications/WezTerm.app/Contents/MacOS
export LDFLAGS="$LDFLAGS -L${BREWPATH}/opt/ruby/lib"
export CPPFLAGS="$CPPFLAGS -I${BREWPATH}/opt/ruby/include"
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/opt/ruby/lib/pkgconfig"
{{ else }}
export LDFLAGS="$LDFLAGS -L/usr/local/opt/ruby/lib"
export CPPFLAGS="$CPPFLAGS -I/usr/local/opt/ruby/include"
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/opt/ruby/lib/pkgconfig"
{{ end }}
export TERM=xterm-256color
export BAT_THEME=ansi

if command -v bat 2>&1 >/dev/null; then
  alias cat="bat"
  export MANPAGER="sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'"
fi
if command -v batcat 2>&1 >/dev/null; then
  alias cat="batcat"
  export MANPAGER="sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | batcat -p -lman'"
fi
{{ if eq .chezmoi.os "linux" }}
{{   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
export BROWSER=wslview
export PATH=$PATH:/opt/nvim-linux-x86_64/bin
{{   end }}
{{ end }}
## Aliases
alias ls='lsd'
alias lsa='ls -lah'
alias l='ls -lah'
alias ll='ls -lh'
alias la='ls -lAh'
alias dockerclear='docker stop $(docker ps -aq) && docker rm $(docker ps -aq)'
alias dockercleardangling='docker rmi $(docker images -q -f dangling=true)'
alias imgcat="wezterm imgcat"
alias oo="cd $HOME/Documents/Obsidian/Personal/"

## Evals
eval $(thefuck --alias)

[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

## Functions
dockerinfo() {
    docker inspect $1 | jq '.[0].Config, .[0].Mounts'
}

listening() {
    if [ $# -eq 0 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P
    elif [ $# -eq 1 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P | grep -i --color $1
    else
        echo "Usage: listening [pattern]"
    fi
}

{{ if and (eq .chezmoi.os "linux") (eq .chezmoi.arch "amd64") -}}
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
{{ else if (eq .chezmoi.os "darwin") -}}
eval "$(brew shellenv)"
{{ end -}} 
batdiff() {
    git diff --name-only --relative --diff-filter=d | xargs cat --diff
}
setopt interactive_comments
zle -N menu-search
zle -N recent-paths
# zstyle -a ':autocomplete::compinit' arguments -u
zstyle '*:compinit' arguments -D -i -u -C -w
source $BREWPATH/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $BREWPATH/share/zsh-autocomplete/zsh-autocomplete.plugin.zsh
source $BREWPATH/share/zsh-autosuggestions/zsh-autosuggestions.zsh
{{ if eq .location "home" -}}
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/sdickinson/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/sdickinson/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/sdickinson/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/sdickinson/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
{{ end -}}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
{{ if eq .chezmoi.os "darwin" -}}
export PNPM_HOME="/Users/sdickinson/Library/pnpm"
{{ else if eq .chezmoi.os "linux" -}}
export PNPM_HOME="/home/sdickinson/.local/share/pnpm"
{{ end -}}
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
#
# eval "$(starship init zsh)"
# eval "$(oh-my-posh init zsh)"
# eval "$(oh-my-posh init zsh --config ~/.config/multiverse-neon.omp.json)"
eval "$(oh-my-posh init zsh --config ~/.config/slim.omp.json)"
bindkey              '^I' menu-select
bindkey "$terminfo[kcbt]" menu-select
bindkey -M menuselect              '^I'         menu-complete
bindkey -M menuselect "$terminfo[kcbt]" reverse-menu-complete
bindkey -a \
    "^P"    .up-history \
    "^N"    .down-history \
    "k"     .up-line-or-history \
    "^[OA"  .up-line-or-history \
    "^[[A"  .up-line-or-history \
    "j"     .down-line-or-history \
    "^[OB"  .down-line-or-history \
    "^[[B"  .down-line-or-history \
    "/"     .vi-history-search-backward \
    "?"     .vi-history-search-forward \
    #
zstyle ':autocomplete:*complete*:*' insert-unambiguous yes
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/.zcompcache"
zstyle ':completion:*' special-dirs true
zstyle ':completion:*' list-colors ''
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
# Don't complete uninteresting users
zstyle ':completion:*:*:*:users' ignored-patterns \
        adm amanda apache at avahi avahi-autoipd beaglidx bin cacti canna \
        clamav daemon dbus distcache dnsmasq dovecot fax ftp games gdm \
        gkrellmd gopher hacluster haldaemon halt hsqldb ident junkbust kdm \
        ldap lp mail mailman mailnull man messagebus mldonkey mysql nagios \
        named netdump news nfsnobody nobody nscd ntp nut nx obsrun openvpn \
        operator pcap polkitd postfix postgres privoxy pulse pvm quagga radvd \
        rpc rpcuser rpm rtkit scard shutdown squid sshd statd svn sync tftp \
        usbmux uucp vcsa wwwrun xfs '_*'
# ... unless we really want to.
zstyle '*' single-ignored show
{{ if eq .chezmoi.os "linux" }}
{{   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
   source <(fzf --zsh)
{{   else }}
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
{{   end }}
{{ else }}
  source <(fzf --zsh)
{{ end }}

source <(wezterm shell-completion --shell zsh)

{{ if eq .location "client" -}}
source ~/.aws/awslogin.sh
{{ end -}}
