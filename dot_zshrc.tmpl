## Start with path so everything else below works
export PATH=/usr/local/opt/vim/bin:/usr/local/opt/ruby/bin:/usr/local/opt/git/bin/:/usr/local/opt/gnu-tar/libexec/gnubin:$PATH:~/bin

~/bin/run_once_daily.sh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=(
  git
  docker
  #docker-compose
  #aws
  #brew
  #npm
  #yarn
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh
. "$HOME/.cargo/env"
# User configuration
## Exports
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
{{ if eq .chezmoi.os "darwin" }}
export PATH=$PATH:/Applications/WezTerm.app/Contents/MacOS
{{ else }}
{{ end }}
export LDFLAGS="$LDFLAGS -L/usr/local/opt/ruby/lib"
export CPPFLAGS="$CPPFLAGS -I/usr/local/opt/ruby/include"
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/opt/ruby/lib/pkgconfig"
export TERM=xterm-256color
export BAT_THEME=ansi
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
{{ if eq .chezmoi.os "linux" }}
{{   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
export BROWSER=wslview
{{   end }}
{{ end }}
## Aliases
alias ls='lsd'
alias dockerclear='docker stop $(docker ps -aq) && docker rm $(docker ps -aq)'
alias dockercleardangling='docker rmi $(docker images -q -f dangling=true)'
alias vim=nvim
{{ if eq .chezmoi.os "darwin" }}
alias cat="bat"
{{ else }}
alias cat="batcat"
{{ end }}
alias imgcat="wezterm imgcat"

## Evals
eval $(thefuck --alias)
eval $(wezterm shell-completion --shell zsh)

[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

## Functions
dockerinfo() {
    docker inspect $1 | jq '.[0].Config, .[0].Mounts'
}

listening() {
    if [ $# -eq 0 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P
    elif [ $# -eq 1 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P | grep -i --color $1
    else
        echo "Usage: listening [pattern]"
    fi
}

{{ if eq .chezmoi.os "linux" }}
{{   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
   source <(fzf --zsh)
{{   else }}
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
{{   end }}
{{ end }}
batdiff() {
    git diff --name-only --relative --diff-filter=d | xargs bat --diff
}
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/sdickinson/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/sdickinson/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/sdickinson/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/sdickinson/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
{{ if eq .chezmoi.os "darwin" -}}
export PNPM_HOME="/Users/sdickinson/Library/pnpm"
{{ else if eq .chezmoi.os "linux" -}}
export PNPM_HOME="/home/sdickinson/.local/share/pnpm"
{{ end -}}
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
#
# eval "$(starship init zsh)"
# eval "$(oh-my-posh init zsh)"
# eval "$(oh-my-posh init zsh --config ~/.config/multiverse-neon.omp.json)"
eval "$(oh-my-posh init zsh --config ~/.config/slim.omp.json)"
